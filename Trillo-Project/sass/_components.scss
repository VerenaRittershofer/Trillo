///////////////////////////////////////////////////
// LOGO
.logo{
    height: 3.25rem;
    margin-left: 2rem;
}

///////////////////////////////////////////////////
// SEARCH

.search{
    flex: 0 0 40%;

    display: flex; //flex-item becomes a flex-container
    align-items: center; //along the cross-axis
    justify-content: center; //along the main-axis

    @media only screen and (max-width: $bp-smallest) {
        order: 1; //the element with the highest number (default: 0) comes last
        flex: 0 0 100%; 
        background-color: var(--color-grey-light-2);
    }

    &__input {
        font-family: inherit; //inputs doesn't automatically inherit the parent's font-family and -size
        font-size: inherit;
        color: inherit;
        background-color: var(--color-grey-light-2);
        border: none; 
        padding: .7rem 2rem;
        border-radius: 10rem; //high number for rounded edges
        width: 90%;
        transition: all .2;
        margin-right: -3.25rem; //button can move on top of the search

        &:focus{
            outline:none;
            width:100%;
            background-color: var(--color-grey-light-3);
        }

        &::-webkit-input-placeholder{
            font-weight: 100;
        }
    }

    &__input:focus + &__button{
        background-color: var(--color-grey-light-2); //button color should stay the same 
    }

    &__button {
        border: none;
        background-color: var(--color-grey-light-2);

        &:focus{
            outline:none;
        }

        &:active{
            transform: translateY(2px);
        }
    }

    &__icon {
        height: 2rem;
        width: 2rem;
        fill: var(--color-grey-dark-3); //change svg-color with fill-property
    }
}


///////////////////////////////////////////////////
// USER NAVIGATION

.user-nav {
    align-self: stretch; //to overwrite the align-items: center in the heading, so the user-nav is stretched to the top (user-nav as item of the header container)
    
    display: flex; //user-nav as a flex-container
    align-items: center; //aligns alls the flex-items that are contained in the user-nav on the cross-axis

    & > * { //only selects direct children
        padding: 0 2rem;
        cursor: pointer; 
        height: 100%;

        display: flex; //icon-box & __user become a flex-container
        align-items: center; //aligns the flex-items (icons, user-photo) along the cross axis (vertically) in the center
    }

    & > *:hover {
        background-color: var(--color-grey-light-2);
    }

    &__icon-box {
        position: relative; //put it here because it doesn't work on an svg-element (icon)
    }

    &__icon {
        height: 2.25rem;
        width: 2.25rem;

        fill: var(--color-grey-dark-2);
    }

    &__notification {
        font-size: .8rem;
        height: 1.75rem; 
        width: 1.75rem; 
        border-radius: 50%; //either high number or 50% to form a circle
        background-color: var(--color-primary);
        color: var(--color-white);
        position: absolute; 
        top: 1.5rem;
        right: 1.1rem; 

        display: flex; //flex-box also aligns text
        justify-content: center;
        align-items: center;
    }

    &__user-photo {
            height: 3.75rem;
            border-radius: 50%;
            margin-right: 1rem;  
        }
}

///////////////////////////////////////////////////
// SIDE NAVIGATION

.side-nav{
    font-size: 1.4rem;
    list-style: none;
    margin-top: 3.5rem;

    @media only screen and (max-width: $bp-medium) {
        margin: 0; 
        display: flex;  //when the sidebar is a the top we want the list-items next to each other
     }

    &__item {
        position: relative;

        @media only screen and (max-width: $bp-medium) {
            flex: 1;   //all of the 4 flex items have then the ability to grow as much as they can (occupy the same space!!)
         }

        &:not(:last-child) {
            margin-bottom: .5rem;

            @media only screen and (max-width: $bp-medium) {
                margin-bottom: 0;
             }
        }
    }

    &__item::before{
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 3px;
        background-color: var(--color-primary);
        transform: scaleY(0);
        transition: transform .2s, //happens firstly (duration: .2s)
                    width .4s cubic-bezier(1,0,0,1) .2s,//happens secondly (duration: .4s, delay .2s) the delay, which is exactly as long as the first transition takes, makes sure that the width transforms after scaleY().
                    //cubic-bezier: slow --> rapid --> slow
                    background-color .1s;
    }

    &__item:hover::before,
    &__item--active::before {
        transform: scaleY(1);
        width: 100%;
    }

    &__item:active::before{
        background-color: var(--color-primary-light);
    }

    &__link:link,
    &__link:visited {
        color: var(--color-grey-light-1);
        text-decoration: none;
        text-transform: uppercase;
        display: block;
        padding: 1.5rem 3rem;
        position: relative; //to enable the z-index
        z-index: 10; //to be on top of the hover effect

        display: flex;
        align-items: center; //to vertically align the icon and the span (text)

        @media only screen and (max-width: $bp-medium) {
            justify-content: center;
            padding: 2rem; 
         }

       @media only screen and (max-width: $bp-small) {
        flex-direction: column;
        padding: 1.5rem .5rem; 
       }
    }
    

    &__icon {
        width: 1.75rem;
        height: 1.75rem;
        margin-right: 2rem;
        fill: currentColor; //color of the current-elemnt/parent-element (useful for hover effects on the parent-element)

        @media only screen and (max-width: $bp-small) {
            margin-right: 0;
            margin-bottom: .7rem;  
            width: 1.5rem; 
            height: 1.5rem; 
        }
    }
}


.legal {
    font-size: 1.2rem;
    color: var(--color-grey-light-4);
    text-align: center;
    padding: 2.5rem;

    @media only screen and (max-width: $bp-medium) {
       display: none; 
     }
}



///////////////////////////////////////////////////
// HOTEL-VIEW

//GALLERY 
.gallery{
    display: flex; 

    &__photo{
        width: 100%; //for responsive design always set a width on an image
        display: block; //to avoid having space between the img and the buttom of the gallery-div (spacing: inline-element) 
    }
}

//OVERVIEW
.overview{
    display: flex;
    align-items: center;
    border-bottom: var(--line);

    &__heading{
        font-size: 2.25rem;
        text-transform: uppercase;
        letter-spacing: 1px;
        padding: 1.5rem 3rem;

        @media only screen and (max-width: $bp-small) {
            font-size: 1.8rem; 
            padding: 1.25rem 2rem;  
           }
        
    }

    &__stars{
        margin-right: auto; //so that the starts only take as much space as they need
        display: flex; //to get rid of the spacing at the buttom (svgs are inline elements but with flexbox we can align them)
    }

    &__icon-star,
    &__icon-location{
        width: 1.75rem;
        height: 1.75rem;
        fill: var(--color-primary)
    }

    &__icon-location{
        margin-right: .5rem;
    }

    &__location{
        font-size: 1.5rem;
        font-weight: 300; 
        display: flex; 
        align-items: center, 
    }


    &__rating {
        background-color: var(--color-primary);
        margin-left: 3rem;
        color: var(--color-white);
        padding: 0 2.25rem; 
        align-self: stretch; //overwrite align-items center for these specific items

        display: flex; 
        flex-direction: column; 
        align-items: center;
        justify-content: center;

        @media only screen and (max-width: $bp-small) {
            flex-direction: column;
            padding: 0 1.5rem; 
           }
    }

    &__rating-average{
        font-size: 2.25rem;
        font-weight: 300;
        margin-bottom: -3px; 

        @media only screen and (max-width: $bp-small) {
            font-size: 1.8rem; 
           }
    }

    &__rating-count{
        font-size: .8rem;
        text-transform: uppercase; 
    }
    
}

//BUTTON-INLINE

.btn-inline{
    border: none;
    color: var(--color-primary);
    font-size: inherit;
    font-weight: 600; 
    border-bottom: 1px solid currentColor; //this way the border will have the exact same color as the text (changes when hovered)
    padding-bottom: 2px;
    display: inline-block;
    background-color: transparent; //whereever we use the buttom it has then the background-color of the div's background-color it is inside of
    cursor: pointer; 
    transition: all .2s;

    &span{
        margin-left: 3px; 
        transition: margin-left .2s; 
    }

    &:hover{
        color:var(--color-grey-dark-1);

        span {
            margin-left: 8px; 
        }
    }

    &:focus{
        outline: none; 
        animation: pulsate 1s infinite; //infinite!

    }
}

@keyframes pulsate {
    0% {
        transform: scale(1);
        box-shadow: none;
    }

    50% {
        transform: scale(1.05);
        box-shadow: 0 1rem 4rem rgba(0,0,0,.25);
    }

    100% {
        transform: scale(1);
        box-shadow: none;
    }
}

//PARAGRAPH
.paragraph:not(:last-of-type) {
   margin-bottom: 2rem; 
}

//LIST

.list {
    list-style: none;
    margin: 2rem 0rem; 
    padding: 2rem; 
    border-top: var(--line);
    border-bottom: var(--line);

    display: flex; 
    flex-wrap: wrap; //to make the text fit 

    &__item {
        flex: 0 0 50%; //we set the width of all list-items at the same percentage so that they are aligned in two columns (50% = side by side)
        margin-bottom: .7rem; 
    }

    &__item::before {
        content: "";
        display: inline-block; 
        height: 1rem; 
        width: 1rem; 
        margin-right: .7rem; 

        //Older browsers
        //background-image: url(../img/chevron-thin-right.svg);
        //background-size: cover; 

        //Newer browsers - masks
        //A mask is an area where we can look through the element and see what's behind it
        background-color: var(--color-primary);
        -webkit-mask-image: url(../img/chevron-thin-right.svg);
        -webkit-mask-size: cover; //icon covers entire element

        mask-image: url(../img/chevron-thin-right.svg);
        mask-size: cover; 
    }
}

//RECOMMEND
.recommend {
    font-size: 1.3rem; 
    color: var(--color-grey-dark-3);

    display: flex;
    align-items: center; 


    &__count{
        margin-right: auto; 
    }

    &__friends{
        display: flex; //to make sure that the photos stay side by side no matter the screen size
    }

    &__photo {
        box-sizing: content-box; //set the box-sizing to default again so that the width/height of the border is added to the picture's height/width
        height: 4rem; 
        width: 4rem; 
        border-radius: 50%; 
        border: 3px solid var(--color-white); 
       
        &:not(:last-child) {
            margin-right: -2rem; //to overlap the pictures
        }
    }
}

//REVIEWS

.review {
    background-color: var(--color-white);
    box-shadow: var(--shadow-light); 
    padding: 3rem; 
    margin-bottom: 3.5rem; 
    position: relative; 
    overflow: hidden; 

    @media only screen and (max-width: $bp-medium) {
        padding: 2rem; 
        margin-bottom: 3rem; 
     }

    &__text{
        margin-bottom: 2rem; 
        position: relative; 
        z-index: 10; 
    }

    &__user{
        display: flex; 
        align-items: center; 
    }

    &__photo{
        height: 4.5rem; 
        width: 4.5rem; 
        border-radius: 50%; 
        margin-right: 1.5rem; 
    }

    &__user-box{
        margin-right: auto; 
    }

    &__user-name{
        font-size: 1.2rem; 
        text-transform: uppercase;
        font-weight: 600;
        margin-bottom: .4rem;  
    }

    &__user-date{
        font-size: 1.1rem; 
        color: var(--color-grey-dark-3);
    }

    &__rating{
       font-size: 2.2rem;  
       color: var(--color-primary);
    }

    &::before {
        content:"\201C";
        position: absolute; 
        top: -2.75rem; 
        left: -1.25rem; 
        line-height: 1; 
        font-size: 20rem; 
        color: var(--color-grey-light-2);
        font-family: sans-serif;
        z-index: 1;  
    }
}


//CALL TO ACTION
.cta {
    padding: 3.5rem 0; 
    text-align: center;

    @media only screen and (max-width: $bp-medium) {
        padding: 2.5 0rem; 
     }

    &__book-now {
        font-size: 2rem; 
        font-weight: 300; 
        text-transform: uppercase;
        margin-bottom: 2.5rem; 
    }
}

.btn{
    font-size: 1.5rem;
    font-weight: 300; 
    text-transform: uppercase;
    border-radius: 100rem;
    border: none;
    background-image: linear-gradient(to right, var(--color-primary-light), var(--color-primary-dark));
    color: var(--color-white);
    cursor: pointer; 
    position: relative; 
    overflow: hidden; //to make the invisible-button really invisible and not overlap the visible btn 

    & > * {
        display: inline-block; //span by default inline-element (inline-block to use padding)
        height: 100%; //we have to define a width/height so we can move it down with translateY and top -100% (same height/width as parent)
        width: 100%;
        transition: all .2s;  
    }

    &__visible{
        padding: 2rem 7.5rem; 
    }
    
    &__invisible{
        position: absolute;
        padding: 2rem 0; //it should have the same padding as the visible one, but as we have more text we need to set a smaller padding for it to fit in
        left: 0; 
        top: -100%; //moves the elements it's own size up
    }

    &:hover {
        background-image: linear-gradient(to left, var(--color-primary-light), var(--color-primary-dark));;
    }

    &:hover &__visible {
        transform: translateY(100%); 
        }

    &:hover &__invisible{
            top: 0; 
        }

    &:focus {
        outline: none; 
        animation: pulsate 1s infinite; 
    }   
    }